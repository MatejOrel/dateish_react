[{"C:\\School2_1stSemester\\projekt\\src\\index.js":"1","C:\\School2_1stSemester\\projekt\\src\\reportWebVitals.js":"2","C:\\School2_1stSemester\\projekt\\src\\App.js":"3","C:\\School2_1stSemester\\projekt\\src\\Login.js":"4","C:\\School2_1stSemester\\projekt\\src\\Header.js":"5","C:\\School2_1stSemester\\projekt\\src\\Chats.js":"6","C:\\School2_1stSemester\\projekt\\src\\SwipeButtons.js":"7","C:\\School2_1stSemester\\projekt\\src\\ChatScreen.js":"8","C:\\School2_1stSemester\\projekt\\src\\TinderCards.js":"9","C:\\School2_1stSemester\\projekt\\src\\firebase.js":"10","C:\\School2_1stSemester\\projekt\\src\\Chat.js":"11","C:\\School2_1stSemester\\projekt\\src\\Register.js":"12","C:\\School2_1stSemester\\projekt\\src\\libs\\hooksLib.js":"13","C:\\School2_1stSemester\\projekt\\src\\Settings.js":"14"},{"size":517,"mtime":1610041371154,"results":"15","hashOfConfig":"16"},{"size":375,"mtime":1610041371154,"results":"17","hashOfConfig":"16"},{"size":1640,"mtime":1610149202847,"results":"18","hashOfConfig":"16"},{"size":1973,"mtime":1610195335614,"results":"19","hashOfConfig":"16"},{"size":1795,"mtime":1610149202821,"results":"20","hashOfConfig":"16"},{"size":671,"mtime":1610041371151,"results":"21","hashOfConfig":"16"},{"size":634,"mtime":1610041371153,"results":"22","hashOfConfig":"16"},{"size":2208,"mtime":1610041371151,"results":"23","hashOfConfig":"16"},{"size":2517,"mtime":1610149202830,"results":"24","hashOfConfig":"16"},{"size":569,"mtime":1610054186896,"results":"25","hashOfConfig":"16"},{"size":639,"mtime":1610041371150,"results":"26","hashOfConfig":"16"},{"size":4520,"mtime":1610195383845,"results":"27","hashOfConfig":"16"},{"size":300,"mtime":1610118887649,"results":"28","hashOfConfig":"16"},{"size":6015,"mtime":1610149040225,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"16zna6q",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},"C:\\School2_1stSemester\\projekt\\src\\index.js",[],["60","61"],"C:\\School2_1stSemester\\projekt\\src\\reportWebVitals.js",[],"C:\\School2_1stSemester\\projekt\\src\\App.js",[],"C:\\School2_1stSemester\\projekt\\src\\Login.js",[],"C:\\School2_1stSemester\\projekt\\src\\Header.js",[],"C:\\School2_1stSemester\\projekt\\src\\Chats.js",[],"C:\\School2_1stSemester\\projekt\\src\\SwipeButtons.js",[],"C:\\School2_1stSemester\\projekt\\src\\ChatScreen.js",[],"C:\\School2_1stSemester\\projekt\\src\\TinderCards.js",[],"C:\\School2_1stSemester\\projekt\\src\\firebase.js",[],"C:\\School2_1stSemester\\projekt\\src\\Chat.js",[],"C:\\School2_1stSemester\\projekt\\src\\Register.js",[],"C:\\School2_1stSemester\\projekt\\src\\libs\\hooksLib.js",[],"C:\\School2_1stSemester\\projekt\\src\\Settings.js",["62"],"import React, { useState, useEffect } from \"react\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { firebaseApp } from \"./firebase\";\r\nimport firebase from \"@firebase/app\";\r\nimport \"./Settings.css\";\r\n\r\nexport const Settings = () => {\r\n  const [users, setUsers] = useState();\r\n  const [distance, setDistance] = useState();\r\n  const [age, setAge] = useState([50, 100]);\r\n  const [image, setImage] = useState();\r\n \r\n  useEffect(() => {\r\n    firebaseApp.auth().onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        await fetch(\r\n          \"https://dateishapi.herokuapp.com/api/userData?uID=\" + user.uid,\r\n          {\r\n            method: \"GET\",\r\n          }\r\n        )\r\n          .then((resp) => resp.json())\r\n          .then((data) => {\r\n            const arr = [];\r\n            Object.keys(data).forEach((attr) => {\r\n              arr[attr] = data[attr];\r\n              //console.log(attr, data[attr]);\r\n            });\r\n            setDistance(arr.distance);\r\n            setAge(arr.minAge, arr.maxAge);\r\n            setUsers(arr);\r\n            setImage(arr.profileImageUrl);\r\n          })\r\n          .catch((error) => console.log(\"failed\", error.message));\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleDistanceChange = (event, newValue) => {\r\n    setDistance(newValue);\r\n  };\r\n\r\n  const handleAgeChange = (event, newValue) => {\r\n    setAge(newValue);\r\n  };\r\n\r\n  function submit() {}\r\n\r\n  /*const saveImage = (event, files) => {\r\n    if (files && files[0]) {\r\n        var reader = new FileReader();\r\n        reader.onload = function(e) {\r\n            // e.target.result is a base64-encoded url that contains the image data\r\n            this.setAttribute('src', e.target.result);\r\n            var filename = users.uID + '.jpg';\r\n            var storageRef = storage.ref('profileImages/');\r\n            var mountainImagesRef = storageRef.child(filename);\r\n            var message = e.target.result;\r\n            mountainImagesRef.putString(message, 'data_url').then(function(snapshot) {\r\n                console.log('Uploaded a data_url string!');\r\n                var profileImage;\r\n                var storageRef = storage.ref('profileImages/' + filename).getDownloadURL()\r\n                        .then(function onSuccess(url){\r\n                            console.log(url)\r\n                            profileImage = url; \r\n                            $.ajax({\r\n                                url: \"/saveurl\",\r\n                                type: \"get\",\r\n                                data: { 'url': url },\r\n                                headers: {'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')}\r\n                                });\r\n                        });\r\n            });\r\n        };\r\n    reader.readAsDataURL(this.files[0]);\r\n  }\r\n}*/\r\nconst onImageChange = (event) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n        var storage = firebase.storage();\r\n        let reader = new FileReader();\r\n        reader.onload = (e) => {\r\n            var filename = users.uId + '.jpg';\r\n            var storageRef = storage.ref('profileImages/');\r\n            var mountainImagesRef = storageRef.child(filename);\r\n            var message = e.target.result;\r\n            console.log(filename);\r\n            mountainImagesRef.putString(message, 'data_url').then(function(snapshot) {\r\n                console.log('Uploaded a data_url string!');\r\n                var profileImage;\r\n                var storageRef = storage.ref('profileImages/' + filename).getDownloadURL()\r\n                        .then(function onSuccess(url){\r\n                            console.log(url)\r\n                            profileImage = url; \r\n                            var data = {profileImageUrl: profileImage}\r\n                            firebase.database().ref('Users/' + users.uId + '/').update(data);         \r\n                            setImage(profileImage)\r\n                        });\r\n        \r\n            });   \r\n    };\r\n     reader.readAsDataURL(event.target.files[0]);\r\n  }\r\n}\r\n\r\n  return (\r\n    <div>\r\n      {users ? (\r\n        <div>\r\n          <img\r\n            src={image}\r\n            id=\"profile-pic\"\r\n            alt=\"not found\"\r\n          ></img>\r\n          <input type=\"file\" onChange={onImageChange} className=\"filetype\" id=\"group_image\"/>\r\n          <br></br>\r\n          <input type=\"text\" defaultValue={users.name}></input>\r\n          <br></br>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Phone\"\r\n            defaultValue={users.phone}\r\n          ></input>\r\n          <br></br>\r\n          <input type=\"textarea\" defaultValue={users.bio}></input>\r\n          <br></br>\r\n          <p>{users.dateOfBirth}</p>\r\n          <p>Show me:</p>\r\n          <input type=\"radio\" value=\"Male\" name=\"gender\" /> Male <br></br>\r\n          <input type=\"radio\" value=\"Female\" name=\"gender\" /> Female\r\n          <p>\r\n            Show distance: <b>{distance} km</b>\r\n          </p>\r\n          <div>\r\n            <Grid item xs=\"4\">\r\n              <Slider\r\n                value={distance}\r\n                max={142}\r\n                onChange={handleDistanceChange}\r\n                aria-labelledby=\"continuous-slider\"\r\n              />\r\n            </Grid>\r\n          </div>\r\n          <p>\r\n            Show age:{\" \"}\r\n            <b>\r\n              {age[0]} - {age[1]}\r\n            </b>\r\n          </p>\r\n          <div>\r\n            <Grid item xs=\"4\">\r\n              <Slider\r\n                value={age}\r\n                min={18}\r\n                max={100}\r\n                onChange={handleAgeChange}\r\n                aria-labelledby=\"range-slider\"\r\n              />\r\n            </Grid>\r\n          </div>\r\n          <Button block size=\"lg\" type=\"submit\" onClick={submit()}>\r\n            Confirm\r\n          </Button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"loading\">\r\n          <p>Loading...</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":93,"column":21,"nodeType":"69","messageId":"70","endLine":93,"endColumn":31},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'storageRef' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]